题目
Given a linked list, return the node where the cycle begins. If there is no cycle, return null.

Note: Do not modify the linked list.

思路
分两步：

先检测是否存在cycle，用快慢指针判断
检测循环起点（一共用了三个指针）
Java 代码
/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        // Detect the cycle existence 
        ListNode slow = head;
        ListNode fast = head;
        ListNode entry = head;

        // corner case: head is null
        if (head == null) return null;
        // detect the cycle 
        while(fast.next != null && fast.next.next != null) {
            fast = fast.next.next;
            slow = slow.next;
            if (fast == slow) {
                // detect the loop begining
                while(entry != slow) {
                    slow = slow.next;
                    entry = entry.next;
                }
                return entry;
            }
        }
        return null;
    }
}
