用Deque双向队列解 Sliding Window Maximum (Leetcode 239)
字数604 阅读528 评论0 喜欢0
题目
Given an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.

For example,
Given nums = [1,3,-1,-3,5,3,6,7], and k = 3.
Window position
[1 3 -1] -3 5 3 6 7
1 [3 -1 -3] 5 3 6 7
1 3 [-1 -3 5] 3 6 7
1 3 -1 [-3 5 3] 6 7
1 3 -1 -3 [5 3 6] 7
1 3 -1 -3 5 [3 6 7]
Therefore, return the max sliding window as [3,3,5,5,6,7].

public int[] maxSlidingWindow(int[] nums, int k) {
        int left = 0;
        int right = 0 + k - 1;
        int[] res = new int[nums.length - k + 1];
        if (k == 0) {
            return new int[0];
        }
        while (right < nums.length) {
            int maxVal = Integer.MIN_VALUE;
            for (int i = left; i <= right; ++i) {
                if (nums[i] > maxVal){
                    maxVal = nums[i];
                }
            }
            res[left] = maxVal;
            right += 1;
            left += 1;
        }

        return res;
    }


