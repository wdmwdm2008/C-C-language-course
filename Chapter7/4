编程题＃2：字符串中次数第2多的字母

xn--: POJ-v92kl82b (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)

注意： 总时间限制: 1000ms 内存限制: 65536kB

描述

输入一串长度不超过500个符号的字符串，输出在串中出现第2多的英语字母(大小写字母认为相同)和次数（如果串中有其它符号，则忽略不考虑）。如果有多个字母的次数都是第2多，则按串中字母出现的顺序输出第1个。

例 ab&dcAab&c9defgb

这里，a 和 b都出现3次，c和d都出现2次，e、f 和 g 各出现1次，其中的符号&和9均忽略不考虑。因此，出现第2多的应该是 c 和 d，但是 d 开始出现的位置在 c 的前面，因此，输出为

D+d:2

(假定在字符串中，次数第2多的字母总存在)

输入

一个字符串

输出

大写字母+小写字母:个数




#include <iostream>
using namespace std;

int main(){
	char a[500] = { '\0' }, index[26][2] = { '0' }, tempc, fiDig[26][2] = { '\0' }, b;
	int i = 0, tempi, pos = 0;
	for (int j = 0; j < 26; j++)                                    // input a---z
		index[j][0] = 97 + j; 
	cin.getline(a, 500);                                            // input string 
	while (a[i] != '\0'){                                           // calculating the number of the corresponding character
		if (a[i] >= 65 && a[i] <= 90){
			a[i] = a[i] + 32;
		}
		for (int j = 0; j < 26; j++){
			if (a[i] == index[j][0])
				index[j][1]++;
		}
		i++;
	}
	for (int j = 0; j < i; j++)                                     // sorting
		for (int k = j + 1; k < i; k++)
			if (index[j][1] < index[k][1]){
				tempi = index[j][1];
				index[j][1] = index[k][1];
				index[k][1] = tempi;
				tempc = index[j][0];
				index[j][0] = index[k][0];
				index[k][0] = tempc;
			}
	int j = 0;
	for (j = 0; j < i; j++){                                         // found the all second charcters and its values
		if ((int)index[j][1] == (int)index[j + 1][1]){
			continue;
		}
		else if (index[j][1] > index[j + 1][1]){
			fiDig[pos][0] = index[j + 1][0];
			fiDig[pos][1] = index[j + 1][1];
			pos++;
			break;
		}
	}
	int h = j + 1;
	for (h; h < i; h++){
		if (index[h][1] == index[h + 1][1]){
			fiDig[pos][0] = index[h + 1][0];
			fiDig[pos][1] = index[h + 1][1];
			pos++;
		}
		else{
			break;
		}
	}
	int len = 0;
	while (a[len] != '\0'){                                         // outputing final value and character
		int k = 0;
		if (a[len] >= 65 && a[len] <= 90){
			a[len] = a[len] + 32;
		}
		for (k; k < pos; k++){
			if (a[len] == fiDig[k][0]){
				b = a[len] - 32;
				cout << b << "+" << a[len] << ":" << (int)fiDig[k][1];
				return 0;
			}
		}
		len++;
	}
}
