简单的学生信息处理程序实现

xn--: POJ-v92kl82b (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)

注意： 总时间限制: 1000ms 内存限制: 65536kB

描述

在一个学生信息处理程序中，要求实现一个代表学生的类，并且所有成员变量都应该是私有的。

（注：评测系统无法自动判断变量是否私有。我们会在结束之后统一对作业进行检查，请同学们严格按照题目要求完成，否则可能会影响作业成绩。）

输入

姓名，年龄，学号，第一学年平均成绩，第二学年平均成绩，第三学年平均成绩，第四学年平均成绩。

其中姓名、学号为字符串，不含空格和逗号；年龄为正整数；成绩为非负整数。

各部分内容之间均用单个英文逗号","隔开，无多余空格。

输出

一行，按顺序输出：姓名，年龄，学号，四年平均成绩（向下取整）。

各部分内容之间均用单个英文逗号","隔开，无多余空格。



#include <iostream>
#include <string>
#include <cstdio>
using namespace std;

class student{
private:
	char name[100], ID[100];
	int age, score1, score2, score3, score4;
public:
	void init(char aname[], int aage, char aID[], int ascore1, int ascore2, int ascore3, int ascore4){
		strcpy_s(name, aname);
		age = aage;
		strcpy_s(ID, aID);
		score1 = ascore1;
		score2 = ascore2;
		score3 = ascore3;
		score4 = ascore4;
	}
	char *getName(){
		return name;
	}
	char *getID(){
		return ID;
	}
	int getAge(){
		return age;
	}
	int aveGrade(){
		return (score1 + score2 + score3 + score4) / 4;
	}

};
int main(int argc, char * argv[]){
	student s;
	char name[100], ID[100], a;
	int age, score1, score2, score3, score4;
	cin.getline(name, 100, ',');
	cin >> age;
	a = cin.get();
	cin.getline(ID, 100, ',');
	cin >> score1 >> a >> score2 >> a >> score3 >> a >> score4;
	s.init(name, age, ID, score1, score2, score3, score4);
	cout << s.getName() << "," << s.getAge() << "," << s.getID() << "," << s.aveGrade() << endl;
	return 0;
}
